Topics
intro
install
quick start
basic commands
comparing
branching & merging
github intro
tools setup (text editor ,compare /merge tool)

installation
git scm

check git by using
git version

version control is used to track the code what we made changes
clone 
add
commit
push
pull

mkdir newpro
git init
git status
git add .(all changes files)
git commit -m "new changes are going to up"
git push origin master

**** to clone through ssh 
create an ssh-keygen (copy the public key)
go to github settings + ssh & gpg keys paste the public key of keygen)
go to terminal
type 
git clone nowhere paste the sshtypeurl
if u want use one project 2 folder
go to github create one repo
git remote add origin giveneworigin
git remote -v
git push -u origin master
**** git branching

new features all builds in branches
to check which branch u r in currently : git branch

*** git checkout is used for switch between branches
** to create a branch in git
git checkout -b featurebranch
vi newfile.txt
add
commit
git push -u origin branchname

now go to master branch
git checkout master
git pull

*** to delete a branch
git branch -d featurebranch(barnachname)

*******Merge Conflicts
create a newbranch
git checkout -b mbranch


** to solve merging issue
error: you need to resolve your current index first
root@ubuntu:~/githubbyraj# git reset --merge
open existing file what u had from master
change some lines of code and commit it.

And again checkout to master
the above branch which file u made changes same changes made on master branch also and commit it.
And go to child branch
git diff branchname
git merge master(to merge the master to child)
solve conflicts

******UNDO on git
above same setup in child branch open a file add a line and commit it
git reset new.txt

git reset HEAD~1 (un stage only previous one commit)
git log (to get all comitted logs)
git reset --hard 54c8c08f26f952fd1650408d9744061bbf19aa2c (spot remove that code from file)

=============sample git commands================
Git Commands
Translated Versions
Versão em português
A list of my commonly used Git commands

If you are interested in my Git aliases, have a look at my .bash_profile, found here: https://github.com/joshnh/bash_profile/blob/master/.bash_profile

--

Getting & Creating Projects
Command	Description
git init	Initialize a local Git repository
git clone ssh://git@github.com/[username]/[repository-name].git	Create a local copy of a remote repository
Basic Snapshotting
Command	Description
git status	Check status
git add [file-name.txt]	Add a file to the staging area
git add -A	Add all new and changed files to the staging area
git commit -m "[commit message]"	Commit changes
git rm -r [file-name.txt]	Remove a file (or folder)
Branching & Merging
Command	Description
git branch	List branches (the asterisk denotes the current branch)
git branch -a	List all branches (local and remote)
git branch [branch name]	Create a new branch
git branch -d [branch name]	Delete a branch
git push origin --delete [branch name]	Delete a remote branch
git checkout -b [branch name]	Create a new branch and switch to it
git checkout -b [branch name] origin/[branch name]	Clone a remote branch and switch to it
git branch -m [old branch name] [new branch name]	Rename a local branch
git checkout [branch name]	Switch to a branch
git checkout -	Switch to the branch last checked out
git checkout -- [file-name.txt]	Discard changes to a file
git merge [branch name]	Merge a branch into the active branch
git merge [source branch] [target branch]	Merge a branch into a target branch
git stash	Stash changes in a dirty working directory
git stash clear	Remove all stashed entries
Sharing & Updating Projects
Command	Description
git push origin [branch name]	Push a branch to your remote repository
git push -u origin [branch name]	Push changes to remote repository (and remember the branch)
git push	Push changes to remote repository (remembered branch)
git push origin --delete [branch name]	Delete a remote branch
git pull	Update local repository to the newest commit
git pull origin [branch name]	Pull changes from remote repository
git remote add origin ssh://git@github.com/[username]/[repository-name].git	Add a remote repository
git remote set-url origin ssh://git@github.com/[username]/[repository-name].git	Set a repository's origin branch to SSH
Inspection & Comparison
Command	Description
git log	View changes
git log --summary	View changes (detailed)
git log --oneline	View changes (briefly)
git diff [source branch] [target branch]	Preview changes before merging
=======================================================================
